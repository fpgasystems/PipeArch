# PipeArch

## Intel

### Simulation
- cd ./apps/glm/intel_work
- ./setup_ase build_sim
- cd build_sim
> In Makefile in build_sim: MENT_VSIM_OPT+= -l run.log -dpioutoftheblue 1 -novopt
> In ase.cfg change to ASE_MODE = 1 for continuous simulation
> In vsim_run.tcl uncomment: run -all
- make
- make sim

- cd ./apps/glm/intel_work
- export ASE_WORKDIR=build_sim/work
- make
- main_ase

### Synthesis
- cd ./apps/glm
- afu_synth_setup --source ./hw/intel_top/sources.txt ./intel_work/build_synth
- cd ./intel_work/build_synth
- chmod a+x ./build/generate_pr_bitstream.sh
- Change line endings in ./build/generate_pr_bitstream.sh from Windows to Unix
- ${OPAE_PLATFORM_ROOT}/bin/run.sh

## Xilinx

### Compiling simulation libraries for modelsim
- Start the preferred version of vivado in a temp directory
- Create a dummy project
- Tools->Compile Simulation Libraries
- Set the "Compiled library location" to a permenant dir (the compile libraries will exist there and sourced from there by modelsim)
Example location: SOMEWHERE/Tools/Mentor/questa-10.5a/questasim/vivado2018_2_compile_simlib
- After compilation is done, copy paste all lines (secureip = SOMEWHERE/Tools/Mentor/questa-10.5a/questasim/vivado2018_2_compile_simlib/questa/secureip)
to SOMEWHERE/Tools/Mentor/questa-10.5a/questasim/modelsim.ini

## Set up postgresql (for MADLib baselines)
- Install postgres-10.0 from source. Download postgresql-10.0.tar.gz. Extract.
	- cd postgresql-10.0/
	- mkdir BUILD
	- cd BUILD
	- ../configure --with-python
	- make all
	- sudo make install
	- export PATH=/usr/local/pgsql/bin:$PATH
- Create a dbfarm:
	- mkdir psql_dbfarm
	- initdb -D psql_dbfarm
	- createdb madlibtest
	- export PGDATABASE=madlibtest
	- /usr/local/madlib/bin/madpack -s madlib -p postgres install
	- Check installation: /usr/local/madlib/bin/madpack -s madlib -p postgres install-check